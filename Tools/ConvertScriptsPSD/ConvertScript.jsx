var originalUnits = Units.PIXELS;var logFile = null;var inputFilePath = arguments[0];var mode = arguments[1];var xscale = arguments[2]var yscale = arguments[3];function initPlugin(){	originalUnits = preferences.rulerUnits 	preferences.rulerUnits = Units.PIXELS		logFile = File(".//" + replaceExtension(documentName, "_log.txt"))	logFile.open("a")	logFile.write ("// Photoshop export plugin\n");	logFile.write ("Input File:" + documentName + "\n");		logFile.write("Dimentions: (" + documentWidth + " x " + documentHeight + ")\n"); }function finishPlugin(){	preferences.rulerUnits = originalUnits	logFile.close()	logFile= null}function writeLog(str){	logFile.write(str);}function replaceExtension(str, ext){	var n = str.indexOf(".", 0);	return str.substr(0, n) + ext;}function nameWithoutExt(str){	var n = str.indexOf(".", 0);	return str.substr(0, n) ;}function saveSelectionToPng(bounds, fileName){	var saveDoc = app.documents.add(bounds[2] - bounds[0], bounds[3] - bounds[1], 72, "result image",  NewDocumentMode.RGB, DocumentFill.TRANSPARENT);	var newLayerInNewDocument = saveDoc.artLayers.add();	saveDoc.paste();			outFile = new File(fileName) 	outFile.remove()	deviceSaveOptions = new ExportOptionsSaveForWeb() 	deviceSaveOptions.format = SaveDocumentType.PNG;	deviceSaveOptions.PNG8 = false;	deviceSaveOptions.quality = 100;	saveDoc.exportDocument (outFile, ExportType.SAVEFORWEB, deviceSaveOptions);			saveDoc.close(SaveOptions.DONOTSAVECHANGES);	app.activeDocument = mainDocument;}function saveToPsd(fileName){//	var saveDoc = app.documents.add(bounds[2] - bounds[0], bounds[3] - bounds[1], 72, "result image",  NewDocumentMode.RGB, DocumentFill.TRANSPARENT);//	var newLayerInNewDocument = saveDoc.artLayers.add();//	saveDoc.paste();			outFile = new File(fileName) 	outFile.remove()	deviceSaveOptions = new ExportOptionsSaveForWeb() 	deviceSaveOptions.format = SaveDocumentType.PNG;	deviceSaveOptions.PNG8 = false;	deviceSaveOptions.quality = 100;//	mainDocument.exportDocument (outFile, ExportType.SAVEFORWEB, deviceSaveOptions);	mainDocument.saveAs(outFile);	//	mainDocument.close(SaveOptions.DONOTSAVECHANGES);//	app.activeDocument = mainDocument;}function Log2(value){	result = 1;	while(result < value) result *= 2;	return result;}function getNumberOfFrameLayers(){	cnt = 0;	for (i = artLayers.length - 1; i >= 0; --i)	{		var layer = artLayers[i];		mainDocument.activeLayer = layer				var pathItems = mainDocument.pathItems;		if (pathItems.length == 0)cnt++;	}	return cnt;}function findNumberOfPathLayers(){	cnt = 0;	for (i = artLayers.length - 1; i >= 0; --i)	{		var layer = artLayers[i];		mainDocument.activeLayer = layer				var pathItems = mainDocument.pathItems;		if (pathItems.length != 0)cnt++;	}	return cnt;}/*var dir = new Folder(processFilePath + "$process");if (!dir.create()){	alert("Cannot create directory /Sources/Export");	}dir = null; */var fileRef = File(inputFilePath)var mainDocument = app.open(fileRef) app.activeDocument = mainDocument;var documentName = inputFilePath;var documentWidth = mainDocument.width.as("px");var documentHeight = mainDocument.height.as("px"); initPlugin();writeLog("Arguments: " + inputFilePath + "\n");if (mode == "percentage"){	xscale *= documentWidth;	yscale *= documentHeight;}else{	xscale *= 1;	yscale *= 1;}mainDocument.resizeImage(xscale, yscale, 1.0, ResampleMethod.BICUBICSHARPER);//saveToPsd(outputFilePath + "/" + replaceExtension(inputFileName, ".psd"));mainDocument.close(SaveOptions.SAVECHANGES);finishPlugin();