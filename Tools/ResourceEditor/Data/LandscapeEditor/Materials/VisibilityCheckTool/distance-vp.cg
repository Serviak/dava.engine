#include "common.cgh"
#include "blending.cgh"

VPROG_IN_BEGIN
    VPROG_IN_POSITION        
    VPROG_IN_NORMAL
VPROG_IN_END

VPROG_OUT_BEGIN
    VPROG_OUT_POSITION

#if defined(ENCODE_DISTANCE)
    VPROG_OUT_TEXCOORD0(distanceToCamera,1)
#endif

#if defined(DECODE_DISTANCE)
    VPROG_OUT_TEXCOORD1(directionFromPoint,3)
#endif

VPROG_OUT_END

property float4x4 worldViewProjMatrix : dynamic,a : ;
property float4x4 worldViewInvTransposeMatrix : dynamic,a : ;
property float4x4 worldMatrix : dynamic,a : ;
property float4x4 viewProjMatrix : dynamic,a : ;
property float3 cameraPosition : dynamic,a : ;

#if defined(DECODE_DISTANCE)
property float3 cubemapCenter : static,a : ;
#endif

VPROG_BEGIN

#if defined(ENCODE_DISTANCE)
	float4 worldPosition = mul(VP_IN_POSITION, worldMatrix);
	VP_OUT(distanceToCamera) = length(worldPosition.xyz - cameraPosition);
#endif

#if defined(DECODE_DISTANCE)
	float4 worldPosition = mul(VP_IN_POSITION, worldMatrix);
	VP_OUT(directionFromPoint) = worldPosition.xyz - cubemapCenter;
#endif

	VP_OUT_POSITION = mul(VP_IN_POSITION, worldViewProjMatrix);
VPROG_END