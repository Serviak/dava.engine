# CMake generated Testfile for 
# Source directory: E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo/Tests/CMakeTests
# Build directory: E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.List "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ListTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.List "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ListTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.List "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ListTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.List "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ListTest.cmake")
else()
  add_test(CMake.List NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.VariableWatch "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/VariableWatchTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.VariableWatch "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/VariableWatchTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.VariableWatch "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/VariableWatchTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.VariableWatch "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/VariableWatchTest.cmake")
else()
  add_test(CMake.VariableWatch NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.Include "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/IncludeTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.Include "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/IncludeTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.Include "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/IncludeTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.Include "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/IncludeTest.cmake")
else()
  add_test(CMake.Include NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.FindBase "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FindBaseTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.FindBase "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FindBaseTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.FindBase "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FindBaseTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.FindBase "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FindBaseTest.cmake")
else()
  add_test(CMake.FindBase NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.Toolchain "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ToolchainTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.Toolchain "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ToolchainTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.Toolchain "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ToolchainTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.Toolchain "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ToolchainTest.cmake")
else()
  add_test(CMake.Toolchain NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.GetFilenameComponentRealpath "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetFilenameComponentRealpathTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.GetFilenameComponentRealpath "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetFilenameComponentRealpathTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.GetFilenameComponentRealpath "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetFilenameComponentRealpathTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.GetFilenameComponentRealpath "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetFilenameComponentRealpathTest.cmake")
else()
  add_test(CMake.GetFilenameComponentRealpath NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.Version "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/VersionTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.Version "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/VersionTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.Version "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/VersionTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.Version "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/VersionTest.cmake")
else()
  add_test(CMake.Version NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.Message "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/MessageTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.Message "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/MessageTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.Message "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/MessageTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.Message "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/MessageTest.cmake")
else()
  add_test(CMake.Message NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.File "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.File "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.File "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.File "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileTest.cmake")
else()
  add_test(CMake.File NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.SeparateArguments "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/SeparateArgumentsTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.SeparateArguments "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/SeparateArgumentsTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.SeparateArguments "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/SeparateArgumentsTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.SeparateArguments "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/SeparateArgumentsTest.cmake")
else()
  add_test(CMake.SeparateArguments NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.ImplicitLinkInfo "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ImplicitLinkInfoTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.ImplicitLinkInfo "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ImplicitLinkInfoTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.ImplicitLinkInfo "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ImplicitLinkInfoTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.ImplicitLinkInfo "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ImplicitLinkInfoTest.cmake")
else()
  add_test(CMake.ImplicitLinkInfo NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.ModuleNotices "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ModuleNoticesTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.ModuleNotices "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ModuleNoticesTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.ModuleNotices "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ModuleNoticesTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.ModuleNotices "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ModuleNoticesTest.cmake")
else()
  add_test(CMake.ModuleNotices NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.GetProperty "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetPropertyTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.GetProperty "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetPropertyTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.GetProperty "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetPropertyTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.GetProperty "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetPropertyTest.cmake")
else()
  add_test(CMake.GetProperty NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.If "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/IfTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.If "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/IfTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.If "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/IfTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.If "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/IfTest.cmake")
else()
  add_test(CMake.If NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.String "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/StringTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.String "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/StringTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.String "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/StringTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.String "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/StringTest.cmake")
else()
  add_test(CMake.String NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.Math "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/MathTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.Math "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/MathTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.Math "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/MathTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.Math "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/MathTest.cmake")
else()
  add_test(CMake.Math NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.CMakeMinimumRequired "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CMakeMinimumRequiredTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.CMakeMinimumRequired "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CMakeMinimumRequiredTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.CMakeMinimumRequired "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CMakeMinimumRequiredTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.CMakeMinimumRequired "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CMakeMinimumRequiredTest.cmake")
else()
  add_test(CMake.CMakeMinimumRequired NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.CompilerIdVendor "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CompilerIdVendorTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.CompilerIdVendor "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CompilerIdVendorTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.CompilerIdVendor "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CompilerIdVendorTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.CompilerIdVendor "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CompilerIdVendorTest.cmake")
else()
  add_test(CMake.CompilerIdVendor NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.ProcessorCount "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DKWSYS_TEST_EXE=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Source/kwsys/Debug/cmsysTestsCxx.exe" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ProcessorCountTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.ProcessorCount "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DKWSYS_TEST_EXE=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Source/kwsys/Release/cmsysTestsCxx.exe" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ProcessorCountTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.ProcessorCount "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DKWSYS_TEST_EXE=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Source/kwsys/MinSizeRel/cmsysTestsCxx.exe" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ProcessorCountTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.ProcessorCount "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DKWSYS_TEST_EXE=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Source/kwsys/RelWithDebInfo/cmsysTestsCxx.exe" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/ProcessorCountTest.cmake")
else()
  add_test(CMake.ProcessorCount NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.PushCheckState "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/PushCheckStateTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.PushCheckState "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/PushCheckStateTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.PushCheckState "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/PushCheckStateTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.PushCheckState "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/PushCheckStateTest.cmake")
else()
  add_test(CMake.PushCheckState NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.While "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/WhileTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.While "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/WhileTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.While "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/WhileTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.While "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/WhileTest.cmake")
else()
  add_test(CMake.While NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.CMakeHostSystemInformation "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CMakeHostSystemInformationTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.CMakeHostSystemInformation "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CMakeHostSystemInformationTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.CMakeHostSystemInformation "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CMakeHostSystemInformationTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.CMakeHostSystemInformation "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CMakeHostSystemInformationTest.cmake")
else()
  add_test(CMake.CMakeHostSystemInformation NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.FileDownload "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileDownloadTest.cmake")
  set_tests_properties(CMake.FileDownload PROPERTIES  PASS_REGULAR_EXPRESSION "file already exists with expected MD5 sum")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.FileDownload "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileDownloadTest.cmake")
  set_tests_properties(CMake.FileDownload PROPERTIES  PASS_REGULAR_EXPRESSION "file already exists with expected MD5 sum")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.FileDownload "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileDownloadTest.cmake")
  set_tests_properties(CMake.FileDownload PROPERTIES  PASS_REGULAR_EXPRESSION "file already exists with expected MD5 sum")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.FileDownload "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileDownloadTest.cmake")
  set_tests_properties(CMake.FileDownload PROPERTIES  PASS_REGULAR_EXPRESSION "file already exists with expected MD5 sum")
else()
  add_test(CMake.FileDownload NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.FileDownloadBadHash "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileDownloadBadHashTest.cmake")
  set_tests_properties(CMake.FileDownloadBadHash PROPERTIES  WILL_FAIL "TRUE")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.FileDownloadBadHash "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileDownloadBadHashTest.cmake")
  set_tests_properties(CMake.FileDownloadBadHash PROPERTIES  WILL_FAIL "TRUE")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.FileDownloadBadHash "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileDownloadBadHashTest.cmake")
  set_tests_properties(CMake.FileDownloadBadHash PROPERTIES  WILL_FAIL "TRUE")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.FileDownloadBadHash "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileDownloadBadHashTest.cmake")
  set_tests_properties(CMake.FileDownloadBadHash PROPERTIES  WILL_FAIL "TRUE")
else()
  add_test(CMake.FileDownloadBadHash NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.FileUpload "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileUploadTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.FileUpload "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileUploadTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.FileUpload "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileUploadTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.FileUpload "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/FileUploadTest.cmake")
else()
  add_test(CMake.FileUpload NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.EndStuff "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-Ddir:STRING=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/EndStuffTest" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/EndStuffTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.EndStuff "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-Ddir:STRING=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/EndStuffTest" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/EndStuffTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.EndStuff "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-Ddir:STRING=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/EndStuffTest" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/EndStuffTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.EndStuff "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-Ddir:STRING=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/EndStuffTest" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/EndStuffTest.cmake")
else()
  add_test(CMake.EndStuff NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.GetPrerequisites "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCTEST_CONFIGURATION_TYPE:STRING=\${CTEST_CONFIGURATION_TYPE}" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetPrerequisitesTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.GetPrerequisites "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCTEST_CONFIGURATION_TYPE:STRING=\${CTEST_CONFIGURATION_TYPE}" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetPrerequisitesTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.GetPrerequisites "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCTEST_CONFIGURATION_TYPE:STRING=\${CTEST_CONFIGURATION_TYPE}" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetPrerequisitesTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.GetPrerequisites "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCTEST_CONFIGURATION_TYPE:STRING=\${CTEST_CONFIGURATION_TYPE}" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/GetPrerequisitesTest.cmake")
else()
  add_test(CMake.GetPrerequisites NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.PolicyCheck "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCMake_BINARY_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build" "-DCMake_SOURCE_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo" "-DGIT_EXECUTABLE:STRING=C:/Program Files (x86)/Git/cmd/git.exe" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/PolicyCheckTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.PolicyCheck "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCMake_BINARY_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build" "-DCMake_SOURCE_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo" "-DGIT_EXECUTABLE:STRING=C:/Program Files (x86)/Git/cmd/git.exe" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/PolicyCheckTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.PolicyCheck "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCMake_BINARY_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build" "-DCMake_SOURCE_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo" "-DGIT_EXECUTABLE:STRING=C:/Program Files (x86)/Git/cmd/git.exe" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/PolicyCheckTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.PolicyCheck "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCMake_BINARY_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build" "-DCMake_SOURCE_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo" "-DGIT_EXECUTABLE:STRING=C:/Program Files (x86)/Git/cmd/git.exe" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/PolicyCheckTest.cmake")
else()
  add_test(CMake.PolicyCheck NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(CMake.CheckSourceTree "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCMake_BINARY_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build" "-DCMake_SOURCE_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo" "-DGIT_EXECUTABLE:STRING=C:/Program Files (x86)/Git/cmd/git.exe" "-DHOME:STRING=" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CheckSourceTreeTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(CMake.CheckSourceTree "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCMake_BINARY_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build" "-DCMake_SOURCE_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo" "-DGIT_EXECUTABLE:STRING=C:/Program Files (x86)/Git/cmd/git.exe" "-DHOME:STRING=" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CheckSourceTreeTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(CMake.CheckSourceTree "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCMake_BINARY_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build" "-DCMake_SOURCE_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo" "-DGIT_EXECUTABLE:STRING=C:/Program Files (x86)/Git/cmd/git.exe" "-DHOME:STRING=" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CheckSourceTreeTest.cmake")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(CMake.CheckSourceTree "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/bin/cmake" "-DCMake_BINARY_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build" "-DCMake_SOURCE_DIR:PATH=E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_repo" "-DGIT_EXECUTABLE:STRING=C:/Program Files (x86)/Git/cmd/git.exe" "-DHOME:STRING=" "-P" "E:/repo/WindowsStore/dava.framework/Tools/WinStoreCMake/cmake_build/Tests/CMakeTests/CheckSourceTreeTest.cmake")
else()
  add_test(CMake.CheckSourceTree NOT_AVAILABLE)
endif()
