function replaceExtension(str, ext){	var n = str.indexOf(".", 0);	return str.substr(0, n) + ext;}var originalUnits = preferences.rulerUnits preferences.rulerUnits = Units.PIXELSvar dir = new Folder("/Sources/Export");if (!dir.create()){	alert("Cannot create directory /Sources/Export");	}dir = null;var file = File("/Sources/Export/export.txt")file.open("w")file.write ("// Photoshop export script log for the\n");var mainDoc = app.activeDocument;var artLayers = app.activeDocument.artLayers;var documentName = mainDoc.name;var bgLayer = artLayers[0];var bounds = bgLayer.bounds;x = bounds[0].as("px");y = bounds[1].as("px");w = bounds[2].as("px") + x;h = bounds[3].as("px") + y;file.write ("Background size:"+ x + "," + y + "," + w + "," + h + "\n");frameCount = 12;xsize = w / frameCount;//mainDoc.selection.clear()mainDoc.activeLayer = bgLayer;for (xci = 0; xci < frameCount; ++xci)	{			var shapeRef = [ 				[xsize * xci 		, 	0], 				[xsize * xci 		,	h],  				[xsize * (xci + 1),	h], 				[xsize * (xci + 1), 	0] 			] 			mainDoc.selection.select(shapeRef) 			mainDoc.selection.copy();						var saveDoc = app.documents.add(xsize, h,  72, "result image",  NewDocumentMode.RGB, DocumentFill.TRANSPARENT);			var newLayerInNewDocument = saveDoc.artLayers.add();			saveDoc.paste();			outFile = new File("/Sources/Export/" + replaceExtension(documentName, "") + "_" + xci + ".png")			outFile.remove()			deviceSaveOptions = new ExportOptionsSaveForWeb() 			deviceSaveOptions.format = SaveDocumentType.PNG;			deviceSaveOptions.PNG8 = false;			deviceSaveOptions.quality = 100;			saveDoc.exportDocument (outFile, ExportType.SAVEFORWEB, deviceSaveOptions);			saveDoc.close(SaveOptions.DONOTSAVECHANGES);	}file.closefile = nullpreferences.rulerUnits = originalUnitsmainDoc.selection.deselect();