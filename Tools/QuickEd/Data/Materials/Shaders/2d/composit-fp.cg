#include "blending.cgh"

#define COLOR_MUL 0
#define COLOR_ADD 1
#define ALPHA_MUL 2
#define ALPHA_ADD 3

#ifndef COLOR_OP
#define COLOR_OP COLOR_MUL
#endif

FPROG_IN_BEGIN
    FPROG_IN_TEXCOORD0(uvMask,2)
	FPROG_IN_TEXCOORD1(uvDetail,2)
	FPROG_IN_TEXCOORD2(uvGradient,2)
	FPROG_IN_TEXCOORD3(uvContour,2)
    FPROG_IN_COLOR0_LOW(color,4)
FPROG_IN_END
    	
FPROG_OUT_BEGIN
    FPROG_OUT_COLOR
FPROG_OUT_END

DECL_FP_SAMPLER2D(mask)
DECL_FP_SAMPLER2D(detail)
DECL_FP_SAMPLER2D(gradient)
DECL_FP_SAMPLER2D(contour)


FPROG_BEGIN

    min10float4 in_color = FP_IN(color);
	
	//fetch
	float maskColor = FP_TEXTURE2D(mask, FP_IN(uvMask)).a;
	float4 detailColor = FP_TEXTURE2D(detail, FP_IN(uvDetail));	
	float4 gradientColor = FP_TEXTURE2D(gradient, FP_IN(uvGradient));
	float4 contourColor = FP_TEXTURE2D(contour, FP_IN(uvContour));
    
    
	float4 detailImpact = float4(detailColor.rgb * gradientColor.rgb, maskColor);
	float4 resColor = mix(detailImpact, contourColor.rgba, contourColor.a);


#if (COLOR_OP == COLOR_MUL)
    resColor = resColor * in_color;
#elif (COLOR_OP == COLOR_ADD)
    resColor = resColor + in_color;
#elif (COLOR_OP == ALPHA_MUL)
    resColor.a = resColor.a * in_color.a;
#elif (COLOR_OP == ALPHA_ADD)
    resColor.a = resColor.a + in_color.a;
#endif

    FP_OUT_COLOR = detailColor;//resColor; //float4(FP_IN(uvDetail)*10, 1, 1);//float4(1, 0, 1, 1);//

FPROG_END
