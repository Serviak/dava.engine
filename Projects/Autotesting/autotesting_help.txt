    void Click(const Vector2 &point, int32 id = 1);
    void Click(const String &controlName, int32 id = 1);
    void Click(const Vector<String> &controlPath, int32 id = 1);

    void TouchDown(const Vector2 &point, int32 id = 1);
    void TouchDown(const String &controlName, int32 id = 1);
    void TouchDown(const Vector<String> &controlPath, int32 id = 1);

    void TouchUp(int32 id = 1);

    void TouchMove(const Vector2 &point, float32 time, int32 id = 1);
    void TouchMove(const String &controlName, float32 time, int32 id = 1);
    void TouchMove(const Vector<String> &controlPath, float32 time, int32 id = 1);

    void KeyPress(char16 keyChar);
    void KeyboardInput(const WideString &text);

    void SetText(const String &controlName, const WideString &text);
    void SetText(const Vector<String> &controlPath, const WideString &text);
    
    void Wait(float32 time);

    void WaitForUI(const String &controlName, float32 timeout = 10.0f);
    void WaitForUI(const Vector<String> &controlPath, float32 timeout = 10.0f);

    void Scroll(const String &controlName, int32 id = 1, float32 timeout = 10.0f);
    void Scroll(const Vector<String> &controlPath, int32 id = 1, float32 timeout = 10.0f);

    void AssertText(const WideString &expected, const Vector<String> &controlPath, const String &assertMessage = "");
    void AssertText(const Vector<String> &expectedControlPath, const Vector<String> &actualControlPath, const String &assertMessage = "");
    
    void AssertBool(bool expected, const Vector<String> &controlPath, const String &assertMessage = "");
    void AssertBool(const Vector<String> &expectedControlPath, const Vector<String> &actualControlPath, const String &assertMessage = "");    

actions:
Выполнить скрипт из yaml файла
    - 
        action: "ExecuteYaml"
        path: "~res:/Autotesting/Actions/to_login_screen.yaml" - путь к файлу
        
Нажать и отпустить Click (touch down + touch up) в точку или на кнопку (на контрол)
    -
        action: "Click"
        controlPath: "menuButton" - имя контрола
    -
        action: "Click"
        controlPath: ["tankList", 0] - в списке tankList тыкнуть в первый элемент
    -
        action: "Click"
        controlPath: ["dialogControl", "okButton"]   - в контроле dialogControl в иерархии где-то есть контрол с именем okButton
    -
        action: "Click"
        point: [130.0, 420.0] - координаты точки на экране
        id: 1 - идентификатор тача, чтобы можно было мультитач использовать
        
Нажатие кнопки (touch down) - обычно используется для эмуляции перетаскивания (drag) = TouchDown + Move + TouchUp
    -
        action: "TouchDown"
        point: [100.0, 460.0]
        id: 1
        
Отпускание кнопки (touch up)   
    -
        action: "TouchUp"
        id: 1 - нужно, чтобы идентификатор совпал с нажатым
    
Передвижение мышки или тача
    -
        action: "TouchMove" 
        point: [180.0, 460.0] - координаты, куда передвинуть
        time: 4.0 - время, за которое передвинуть
        id: 1
        
Установка текста в поле ввода текста
    -
        action: "SetText"
        controlPath: "loginTextField" - путь к контролу - использовать только для UITextField
        text: "autotest1@test.com" - тект, которые поставить в UITextField
        
Подождать
    -
        action: "Wait"
        time: 5.0 - время ожидания
        
Подождать появление контрола
    -
        action: "WaitForUI"
        controlPath: "startBattleButton" - путь к контролу (может быть в формате ["dialogControl", "okButton"])
        
Проскролить список до ячейки
    -
        action: "Scroll"
        controlPath: ["tankList", 0] - путь к контролу, который должен быть видимым, после скроллинга
        
Подождать появление экрана
    -
        action: "WaitForSreen"
        screenName: "BattleScreen" - путь к контролу (может быть в формате "LoginScreen", "GarageScreen", "RandomPrebattleScreen")

Проверить значение
    -
        action: "Assert"
        message: "check login" - сообщение, для записи в базу данных и в лог (будет check login: FAILED или check login: PASSED)
        expected: "mumza@test.com" - ожидаемое значение (текст или bool)
        actual:
            getter: "GetText" - тип получаемого значения (GetText или GetBool)
            controlPath: "loginTextField" - путь к контролу, у которого получить значение
            
везде где есть controlPath, можно писать в форме ["pathComponrnt1", "pathComponrnt2", ... , "pathComponrntN"]
        