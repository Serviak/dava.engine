VPROG_IN_BEGIN
    VPROG_IN_POSITION
    VPROG_IN_TEXCOORD0(2)
    VPROG_IN_TEXCOORD1(3)
    VPROG_IN_TEXCOORD2(3)
VPROG_IN_END

VPROG_OUT_BEGIN
    VPROG_OUT_POSITION
    VPROG_OUT_TEXCOORD0(texCoord,2)
    VPROG_OUT_COLOR0(vegetationColor,3)
VPROG_OUT_END

DECL_VP_SAMPLER2D(heightmap)
DECL_VP_SAMPLER2D(vegetationmap)

property float4x4 worldViewProjMatrix : shared,dynamic : ;
property float3 tilePos : shared,static : ;
property float3 worldSize : shared,static : ;
property float2 lodSwitchScale : shared,static : ;
property float2 heightmapScale : shared,static : ;
property float4 vegWaveOffsetx : shared,static : ;
property float4 vegWaveOffsety : shared,static : ;
//8 floats: xxxxyyyy (xy per layer)

VPROG_BEGIN

    float3 inPosition = VP_IN_POSITION;
    float2 inTexCoord0 = VP_IN_TEXCOORD0;
    float3 inTexCoord1 = VP_IN_TEXCOORD1;
    float3 inTexCoord2 = VP_IN_TEXCOORD2;
    
	VP_OUT(texCoord) = inTexCoord0;
    
    //inTexCoord1.y - cluster type (0...3)
    //inTexCoord1.z - cluster's reference density (0...15)

    float3 clusterCenter = float3(inTexCoord2.x + tilePos.x, inTexCoord2.y + tilePos.y, inTexCoord2.z);

    float3 pos = float3(inPosition.x + tilePos.x, inPosition.y + tilePos.y, inPosition.z);

    float2 hUVheight = float2(clamp(1.0 - (0.5 * worldSize.x - clusterCenter.x) / worldSize.x, 0.0, 1.0),
                              clamp(1.0 - (0.5 * worldSize.y - clusterCenter.y) / worldSize.y, 0.0, 1.0));

    hUVheight = float2(clamp(hUVheight.x * heightmapScale.x, 0.0, 1.0),
                       clamp(hUVheight.y * heightmapScale.y, 0.0, 1.0));

    float4 heightVec = VP_TEXTURE2D(heightmap, hUVheight);
    float height = dot(heightVec, float4(0.00022888532845, 0.00366216525521, 0.05859464408331, 0.93751430533303)) * worldSize.z;

    pos.z += height;
    clusterCenter.z += height;

    float clusterScale = tilePos.z;
    if(int(inTexCoord1.x) == int(lodSwitchScale.x))
    {
        clusterScale *= lodSwitchScale.y;
    }

    float2 hUVcolor = float2(hUVheight.x, 1.0 - hUVheight.y);
    float4 vegetationMask = VP_TEXTURE2D(vegetationmap, hUVcolor);
    
    VP_OUT(vegetationColor) = vegetationMask.rgb;
    
    //wave transform
    int clusterType = int(inTexCoord1.y);
    int waveIndex = clusterType * 2;
    
    pos.x += inTexCoord1.z * vegWaveOffsetx[waveIndex];
    pos.y += inTexCoord1.z * vegWaveOffsety[waveIndex];
    
    pos = lerp(clusterCenter, pos, vegetationMask.a * clusterScale);
    VP_OUT_POSITION = mul(float4(pos, 1.0), worldViewProjMatrix);

VPROG_END
